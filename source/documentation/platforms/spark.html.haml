---
title: Spark with Gobot
author: The Hybrid Group
page_title: Spark
page_subtitle: "<a href='https://github.com/hybridgroup/gobot-spark' target='blanck' class='repository'>Repository</a> <a class='issues' href='https://github.com/hybridgroup/gobot-spark/issues' target='blanck'>Issues</a>"
layout: page
---

.documentation
  %section.intro
    = image_tag "/images/spark.jpg", class: "display"

    %p The Spark Core contains a Wi-Fi connected microcontroller. Once it connects to a Wi-Fi network, it automatically connects with a central server (the "Spark Cloud") and stays connected so it can be controlled from external systems, such as a Cylon.js program.

    %p
      For more info about the Spark platform go to
      = succeed "." do
        = link_to "https://www.spark.io/", "https://www.spark.io/", target: :blank

  %section.how_to
    %h2 How to install
    %p Installing Gobot with Spark support is pretty easy.
    :markdown
          :::ruby
          go get -u github.com/hybridgroup/gobot-spark
    %h2 How to use
    %p This small program lets you turn on or off a LED for every 1 sec.
    %h3 Javascript  
    :markdown
          :::javascript
          package main

          import (
                  "github.com/hybridgroup/gobot"
                  "github.com/hybridgroup/gobot-spark"
                  "github.com/hybridgroup/gobot-gpio"
          )

          func main() {

                  spark := new(gobotSpark.SparkAdaptor)
                  spark.Name = "spark"
                  spark.Params = make(map[string]interface{})
                  spark.Params["device_id"] = "55ff6f064989495346582587"
                  spark.Params["access_token"] = "043225bc38f331d9bd965a5e9bdac40ac068d5c2"

                  led := gobotGPIO.NewLed(spark)
                  led.Name = "led"
                  led.Pin = "D7"

                  work := func() {
                          gobot.Every("1s", func() {
                                  led.Toggle()
                          })
                  }

                  robot := gobot.Robot{
                          Connections: []interface{}{ spark }, 
                          Devices:     []interface{}{ led },
                          Work:        work,
                  }

                  robot.Start()
          }



  %section.drivers
    %h2 Drivers
    
    %p Available drivers for the spark platform are listed below, the drivers contain detailed documentation and examples of what kinds of physical computing (using Cylon.js and Node.js) you can be doing:

    .hardware
      .devices
        = #partial "documentation/partials/analog-sensor"
        = #partial "documentation/partials/button"
        = partial "documentation/partials/led"
        = #partial "documentation/partials/maxbotix"
        = #partial "documentation/partials/motor"
        = #partial "documentation/partials/servo"

