---
layout: documentation
page_title_show: true
title: "Gobot Example - drone"
page_title: "Example: drone"
author: The Hybrid Group
description: A Gobot code example
page_subtitle: "<a href='https://github.com/hybridgroup/gobot-ardrone/tree/master/examples' target='_blank'>View In Repo</a>"
active_menu_docs: true
---
-content_for :js_accordeon do
  :javascript
    $("#example-panel").addClass("active-panel");
    $(".accordion-docs dt:nth-child(13) a:nth-child(2) img").addClass("rotate");
    
.example
  :markdown
        :::go
        package main

        import (
        	"github.com/hybridgroup/gobot"
        	"github.com/hybridgroup/gobot-ardrone"
        )

        func main() {

        	ardroneAdaptor := new(gobotArdrone.ArdroneAdaptor)
        	ardroneAdaptor.Name = "Drone"

        	drone := gobotArdrone.NewArdrone(ardroneAdaptor)
        	drone.Name = "Drone"

        	work := func() {
        		drone.TakeOff()
        		gobot.On(drone.Events["Flying"], func(data interface{}) {
        			gobot.After("1s", func() {
        				drone.Right(0.1)
        			})
        			gobot.After("2s", func() {
        				drone.Left(0.1)
        			})
        			gobot.After("3s", func() {
        				drone.Land()
        			})
        		})
        	}

        	robot := gobot.Robot{
        		Connections: []gobot.Connection{ardroneAdaptor},
        		Devices:     []gobot.Device{drone},
        		Work:        work,
        	}

        	robot.Start()
        }

