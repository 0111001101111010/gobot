---
title: Gobot - Button Driver
author: The Hybrid Group
page_title: Button
page_subtitle: Driver
page_title_show: true
layout: documentation
subnav_driver: true
subnav_circuit_driver: true

arduino_platform: true
beaglebone_platform: true
digispark_platform: true
---
%section.intro
  = image_tag "/images/devices/button.jpg", class: "display"
  .info_intro
    %p Simple interface that makes it possible to register clicks through physical input.
  .clear
  
%section.how_to#HowToConnect
  %h2 How To Connect
  :markdown
    Install the library with: `go get -u github.com/hybridgroup/gobot-gpio`
  %h3 For Spark:
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-gpio"
          "github.com/hybridgroup/gobot-spark"
        )

        func main() {

          spark := new(gobotSpark.SparkAdaptor)
          spark.Name = "spark"
          spark.Params = map[string]interface{}{
            "device_id":    "",
            "access_token": "",
          }

          button := gobotGPIO.NewButton(spark)
          button.Name = "button"
          button.Pin = "D5"
          button.Interval = "2s"

          led := gobotGPIO.NewLed(spark)
          led.Name = "led"
          led.Pin = "D7"
        ...


%section.how-to#HowToUse
  %h2 How To Use
  %p This example detects when a button has been pushed, it turns on and off a LED
 
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-gpio"
          "github.com/hybridgroup/gobot-spark"
        )

        func main() {

          spark := new(gobotSpark.SparkAdaptor)
          spark.Name = "spark"
          spark.Params = map[string]interface{}{
            "device_id":    "",
            "access_token": "",
          }

          button := gobotGPIO.NewButton(spark)
          button.Name = "button"
          button.Pin = "D5"
          button.Interval = "2s"

          led := gobotGPIO.NewLed(spark)
          led.Name = "led"
          led.Pin = "D7"

          work := func() {
            gobot.On(button.Events["push"], func(data interface{}) {
              led.On()
            })

            gobot.On(button.Events["release"], func(data interface{}) {
              led.Off()
            })
          }

          robot := gobot.Robot{
            Connections: []gobot.Connection{spark},
            Devices:     []gobot.Device{button, led},
            Work:        work,
          }

          robot.Start()
        }

%section.public-methods
  .commands_api#Commands
    %h1 Commands
    %p No commands
  .commands_api#Events
    = partial "/documentation/drivers/partials/gpio/events_button"   

%section.circuit#Circuit
  %h2 Circuit
  .description_circuit
    %p 
  .image_circuit
    %img{:src => "/documentation/drivers/breadboards/gpio/button_bb.png", :alt => ""}/ 
  .clear
  
%section.compatability.hardware#Compatability
  %h2 Compatability
  =# TODO: Update platform list with all that work with this driver in Cylon.js.
  .devices
    = partial "documentation/partials/devices_platforms"
   
