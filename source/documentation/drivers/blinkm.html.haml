---
title: Gobot - BlinkM Driver
author: The Hybrid Group
page_title: BlinkM
page_subtitle: Driver
layout: page
---
.documentation
  %section.intro
    =image_tag "/images/blinkm.jpg", class: "display"
    %p
      Allows user to control BlinkM RGB LED via i2c interface.

  %section.how-to
    %h2 How to establish a connection and setup the driver
    :markdown
      Install the library with `go get -u github.com/hybridgroup/gobot`
    :markdown
          :::javascript
          package main

          import (
            "github.com/hybridgroup/gobot"
            "github.com/hybridgroup/gobot-beaglebone"
            "time"
          )

          func main() {

            beaglebone := new(gobotBeaglebone.Beaglebone)
            beaglebone.Name = "Beaglebone"

            led := gobotBeaglebone.NewLed(beaglebone)
            led.Driver = gobot.Driver{
              Name: "led",
              Pin: "P9_12",
            }

            connections := []interface{} {
              beaglebone,
            }
            devices := []interface{} {
              led,
            }
            ...

  %section.public-events
    %h2 Commands:
    
    %dl.methods 
      %dt off
      %dd Turns BlinkM off.
      %dt rgb → nil
      %dd Sets the color of the BlinkM RGB LED to the specified combination of RGB color provided (red, green and blue values should be between 0 and 255).
      %dt fade → nil
      %dd Fades the color of the BlinkM RGB LED to the specified combination of RGB color provided (red, green and blue values should be between 0 and 255).
      %dt color → [red, green, blue] (integer)
      %dd Returns an array containing the RGB values for the current color (all integer between 0 and 255).
      %dt version → String
      %dd Returns an sring describing the I2C firmware version being used.

    %h2 Events

    %dl.methods 
      %dt start
      %dd Sent when the device has been started and is ready to use.  


  %section.how-to
    %h2 How to use
    %p Example using a BlinkM.
    :markdown
          :::javascript
          package main

          import (
            "github.com/hybridgroup/gobot"
            "github.com/hybridgroup/gobot-beaglebone"
            "time"
          )

          func main() {

            beaglebone := new(gobotBeaglebone.Beaglebone)
            beaglebone.Name = "Beaglebone"

            led := gobotBeaglebone.NewLed(beaglebone)
            led.Driver = gobot.Driver{
              Name: "led",
              Pin: "P9_12",
            }

            connections := []interface{} {
              beaglebone,
            }
            devices := []interface{} {
              led,
            }

            work := func(){
              gobot.Every(1000 * time.Millisecond, func(){ led.Toggle() })
            }
            
            robot := gobot.Robot{
                Connections: connections, 
                Devices: devices,
                Work: work,
            }

            robot.Start()
          }
    

  %section.circuit
    %h2 Circuit and Schematic
    %p
      Coming soon...

  %section.compatability.hardware
    %h2 Works with:
    .devices
      = #partial "documentation/partials/arduino"
      =partial "documentation/partials/beaglebone"
      =# partial "documentation/partials/digispark"
      =#s partial "documentation/partials/raspberry-pi"
