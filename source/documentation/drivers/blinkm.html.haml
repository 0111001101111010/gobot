---
title: Gobot - BlinkM Driver
author: The Hybrid Group
page_title: BlinkM
page_subtitle: Driver
page_title_show: true
layout: documentation

beaglebone_platform: true
---

%section.intro
  =image_tag "/images/devices/blinkm.jpg", class: "display"
  %p
    Allows user to control BlinkM RGB LED via i2c interface.

%section.how-to
  %h2 How to establish a connection and setup the driver
  :markdown
    Install the library with: `go get -u github.com/hybridgroup/gobot-i2c`
  %h3 For Arduino
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-firmata"
          "github.com/hybridgroup/gobot-i2c"
        )

        func main() {
          firmata := new(gobotFirmata.FirmataAdaptor)
          firmata.Name = "firmata"
          firmata.Port = "/dev/ttyACM0"

          blinkm := gobotI2C.NewBlinkM(firmata)
          blinkm.Name = "blinkm"
        ...
        

%section.how-to
  %h2 How to use
  %p Example using a BlinkM and Arduino
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-firmata"
          "github.com/hybridgroup/gobot-i2c"
        )

        func main() {
          firmata := new(gobotFirmata.FirmataAdaptor)
          firmata.Name = "firmata"
          firmata.Port = "/dev/ttyACM0"

          blinkm := gobotI2C.NewBlinkM(firmata)
          blinkm.Name = "blinkm"

          work := func() {
            gobot.Every("3s", func() {
              blinkm.Rgb(byte(gobot.Rand(255)), byte(gobot.Rand(255)), byte(gobot.Rand(255)))
              fmt.Println("color", blinkm.Color())
            })
          }

          robot := gobot.Robot{
            Connections: []gobot.Connection{firmata},
            Devices:     []gobot.Device{blinkm},
            Work:        work,
          }

          robot.Start()
        }
  
%section.public-methods
  .commands_api
    = partial "/documentation/drivers/partials/i2c/commands_blinkm"
  .commands_api
    = partial "/documentation/drivers/partials/i2c/events_blinkm"   

%section.circuit#Circuit
  %h2 Circuit 
  .description_circuit
    %p
  .image_circuit 
    %img{:src => "/documentation/drivers/breadboards/i2c/blinkm_bb.png", :alt => ""}/ 
  .clear 

%section.compatability.hardware
  %h2 Works with:
  .devices
    = partial "documentation/partials/devices_platforms"
    
