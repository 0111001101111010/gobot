---
title: Gobot - Servo Driver
author: The Hybrid Group
page_title: Servo
page_subtitle: Driver
page_title_show: true
layout: documentation

arduino_platform: true
digispark_platform: true
---
%section.intro
  = image_tag "/images/devices/servo.jpg", class: "display"
  .info_intro
    %p Provides an interface for making servos easy to work and interact with from Gobot.
  .clear
  
%section.how-to
  %h2 How to establish a connection and setup the driver
  :markdown
    Install the library with: `go get -u github.com/hybridgroup/gobot-gpio`
  %h3 For Digispark:
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-digispark"
          "github.com/hybridgroup/gobot-gpio"
        )

        func main() {

          digispark := new(gobotDigispark.DigisparkAdaptor)
          digispark.Name = "digispark"

          servo := gobotGPIO.NewServo(digispark)
          servo.Name = "servo"
          servo.Pin = "0"
        ...

%section.how-to
  %h2 How to use
  %p
    This example moves a servo from a random angle.

  %h3 Example
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-digispark"
          "github.com/hybridgroup/gobot-gpio"
        )

        func main() {

          digispark := new(gobotDigispark.DigisparkAdaptor)
          digispark.Name = "digispark"

          servo := gobotGPIO.NewServo(digispark)
          servo.Name = "servo"
          servo.Pin = "0"

          work := func() {
            servo.InitServo()
            gobot.Every("1s", func() {
              i := uint8(gobot.Rand(180))
              fmt.Println("Turning", i)
              servo.Move(i)
            })
          }

          robot := gobot.Robot{
            Connections: []interface{}{digispark},
            Devices:     []interface{}{servo},
            Work:        work,
          }

          robot.Start()
        }
  
%section.public-methods
  .commands_api
    = partial "/documentation/drivers/partials/gpio/commands_servo"
  .commands_api
    = partial "/documentation/drivers/partials/gpio/events_servo"   

%section.circuit#Circuit
  %h2 Circuit
  .description_circuit
    %p 
  .image_circuit 
    %img{:src => "/documentation/drivers/breadboards/gpio/servo_bb.png", :alt => ""}/ 
  .clear 
  
%section.compatability.hardware
  %h2 Works with:
  .devices
    = partial "documentation/partials/devices_platforms"


