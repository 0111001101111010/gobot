---
page_title_show: true
title: Gobot - Dualshock3 Controller Driver
author: The Hybrid Group
page_title: Dualshock3 Controller
page_subtitle: Driver
layout: documentation
subnav_driver: true

joystick_platform: true
---
%section.intro
  =image_tag "/images/devices/dualshock3.jpg", class: "display"
  .info-intro
    %p Allows user to interact with Artoo devices using a Dualshock3 game controller.
  .clear
  
%section.how_to#HowToConnect
  %h2 How To Connect
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-joystick"
        )

        func main() {
          joystickAdaptor := new(gobotJoystick.JoystickAdaptor)
          joystickAdaptor.Name = "ps3"
          joystickAdaptor.Params = map[string]interface{}{
            "config": "./configs/dualshock3.json",
          }

          joystick := gobotJoystick.NewJoystick(joystickAdaptor)
          joystick.Name = "ps3"
        ...

%section.how-to#HowToUse
  %h2 How To Use
  %h3 Example receiving button events from Dualshock3 controller joystick.
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-joystick"
        )

        func main() {
          joystickAdaptor := new(gobotJoystick.JoystickAdaptor)
          joystickAdaptor.Name = "ps3"
          joystickAdaptor.Params = map[string]interface{}{
            "config": "./configs/dualshock3.json",
          }

          joystick := gobotJoystick.NewJoystick(joystickAdaptor)
          joystick.Name = "ps3"

          work := func() {
            gobot.On(joystick.Events["square"], func(data interface{}) {
              fmt.Println("square", data)
            })
            gobot.On(joystick.Events["triangle"], func(data interface{}) {
              fmt.Println("triangle", data)
            })
            gobot.On(joystick.Events["left_x"], func(data interface{}) {
              fmt.Println("left_x", data)
            })
            gobot.On(joystick.Events["left_y"], func(data interface{}) {
              fmt.Println("left_y", data)
            })
            gobot.On(joystick.Events["right_x"], func(data interface{}) {
              fmt.Println("right_x", data)
            })
            gobot.On(joystick.Events["right_y"], func(data interface{}) {
              fmt.Println("right_y", data)
            })
          }

          robot := gobot.Robot{
            Connections: []gobot.Connection{joystickAdaptor},
            Devices:     []gobot.Device{joystick},
            Work:        work,
          }

          robot.Start()
        }

%section.public-events
  .commands-api#Events
    = partial "/documentation/drivers/partials/joystick/events_dualshock3"

  

%section.compatability.hardware#Compatability
  %h2 Compatibility
  .devices
    =# TODO: Update platform list at the top of the page.
    = partial "documentation/partials/devices_platforms"
