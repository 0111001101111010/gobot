---
title: Gobot - Leap Motion Driver
author: The Hybrid Group
page_title: Leap Motion
page_subtitle: Driver
page_title_show: true
layout: documentation

leapmotion_platform: true
---

%section.intro
  =image_tag "/images/devices/leap_motion.jpg", class: "display"
  %p
    Allows user to interact with Gobot devices using a Leap Motion controller. The Leap Motion uses its built in cameras to track the user's hand motions, and translations those to events that Gobot can use to trigger actions or control hardware.

%section.how-to
  %h2 How to establish a connection and setup the driver
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-leapmotion"
        )

        func main() {
          leapAdaptor := new(gobotLeap.LeapAdaptor)
          leapAdaptor.Name = "leap"
          leapAdaptor.Port = "127.0.0.1:6437"

          leap := gobotLeap.NewLeap(leapAdaptor)
          leap.Name = "leap"
        ...
%section.public-methods
  %h2 Events

  %dl.methods 
    %dt message
    %dd Gets triggered when receiving a message.
    %dt start
    %dd Sent when the device has been started and is ready to use.

  -#%h3 hand
  -#%p Gets triggered when doing a hand motion, makes hand input available.

  -#%h3 gesture
  -#%p Gets triggered when doing a gesture motion, makes hand input available.

  -#%h3 pointable
  -#%p Gets triggered when doing a pointable motion, makes hand input available.

  -#%h3 frame
  -#%p Gets triggered with every motion detected, makes frame input available.

  -#%h3 How to use events and call them on your drivers
  -#%p Pretty simple, when the connection and the driver have been setup (as explained above) you can call events on them as follows:
  -#:markdown
        -#%:::go 
        -#on leapmotion, :hand => proc { |sender, hand| puts hand.inspect }

%section.how-to
  %h2 How to use
  %h3 Example receiving message events from a Leap Motion.
  :markdown
        :::go
        package main

        import (
          "fmt"
          "github.com/hybridgroup/gobot"
          "github.com/hybridgroup/gobot-leapmotion"
        )

        func main() {
          leapAdaptor := new(gobotLeap.LeapAdaptor)
          leapAdaptor.Name = "leap"
          leapAdaptor.Port = "127.0.0.1:6437"

          leap := gobotLeap.NewLeap(leapAdaptor)
          leap.Name = "leap"

          work := func() {
            gobot.On(leap.Events["Message"], func(data interface{}) {
              fmt.Println(data)
            })
          }

          robot := gobot.Robot{
            Connections: []gobot.Connection{leapAdaptor},
            Devices:     []gobot.Device{leap},
            Work:        work,
          }

          robot.Start()
        }

%section.compatability.hardware
  %h2 Works with:
  .devices
    = partial "documentation/partials/devices_platforms"
